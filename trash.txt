        /*
        public static string[] seperate(int number, char seperator, string theString)
        {
            string[] returned = new string[4];
            int i = 0;
            int error = 0;
            int length = theString.Length;

            foreach (char c in theString)
            {
                if (i != number)
                {
                    if (error > length || number > 5)
                    {
                        returned[0] = "-1";
                        return returned;
                    }
                    else if (c == seperator)
                    {
                        returned[i] = theString.Remove(theString.IndexOf(c));
                        theString = theString.Remove(0, theString.IndexOf(c) + 1);
                        i++;
                    }
                    error++;

                    if (error == length && i != number)
                    {
                        returned[0] = "-1";
                        return returned;
                    }
                }
                else
                {
                    returned[i] = theString;
                }
            }
            return returned;
        }
        */

        /*
        static void OnFriendMessage(SteamFriends.FriendMsgCallback callback)
        {
            string[] args;
            if (callback.EntryType == EChatEntryType.ChatMsg)
            {
                //steamFriends.SendChatMessage(callback.Sender, EChatEntryType.ChatMsg, "GUNS!!");
                if (callback.Message.Length > 1)
                {
                    if (callback.Message.Remove(1) == "!") //command
                    {
                        string command = callback.Message; //!friend [sid64] = !friend
                        if (command.Contains(' '))
                        {
                            command = callback.Message.Remove(callback.Message.IndexOf(' '));
                        }

                        switch (command)
                        {
                            case "!send": //!send friendname message
                                args = seperate(2, ' ', callback.Message);
                                Console.WriteLine("!send " + args[1] + args[2] + " command received. User: " + steamFriends.GetFriendPersonaName(callback.Sender));
                                if (args[0] == "-1")
                                {
                                    steamFriends.SendChatMessage(callback.Sender, EChatEntryType.ChatMsg, overgameInvalid());
                                }
                                break;
                        }

                    }
                    else if (callback.Message.Remove(1) == "*") //act
                    {
                        char[] delim = { ' ', '.', ',', ':', '\t', '*' };
                        string[] words = callback.Message.Split(delim, StringSplitOptions.RemoveEmptyEntries);
                        List<string> notValid = new List<string>(new string [] {});
                        Console.Write("Dictionary analysis of words...: ");
                        foreach (string st in words)
                        {
                            string s = st.ToLower();
                            Console.Write(s);
                            if (!engDict.Contains(s) || s == "chicken" || s == "chi" )
                            {
                                notValid.Add(s);
                                Console.Write("(!)");
                            }
                            Console.Write(" ");
                        }
                        Console.WriteLine("");

                        notValid = dictException(notValid);

                        Console.Write("Words to examine: ");
                        foreach (string s in notValid) { Console.Write(s + " "); }
                        Console.WriteLine("");

                        if (notValid.Count >= 1)
                        {
                            steamFriends.SendChatMessage(callback.Sender, EChatEntryType.ChatMsg, overgameUndo(notValid[rnd.Next(notValid.Count)]));
                        }
                        else
                        {
                            steamFriends.SendChatMessage(callback.Sender, EChatEntryType.ChatMsg, overgameIdle());
                        }
                    }
                    else if (callback.Message.Contains("overgame"))//act
                    {
                        steamFriends.SendChatMessage(callback.Sender, EChatEntryType.ChatMsg, overgameIdle());
                    }
                }
            }
        }
        */

                            /*
                            Console.Write(s);
                            if (!engDict.Contains(s))
                            {
                                notValid.Add(s);
                                Console.Write("(!)");
                            }
                            Console.Write(" ");
                            */


                                /*
                                if (s == "kick")
                                {
                                    overgameKickRoutine(callback);
                                    break;
                                }
                                else if (s == "ban")
                                {
                                    overgameBanRoutine(callback);
                                    break;
                                }

                                else if (s == "aim")
                                {
                                    groupChat(callback, overgameReact(callback));
                                    break;
                                }
                                else if (s == "chicken")
                                {
                                    groupChat(callback, overgameUndo("chicken"));
                                    return;
                                }
                                else if (s == "chi")
                                {
                                    groupChat(callback, overgameUndo("chi"));
                                    return;
                                }
                                else if (s == "chicarrot")
                                {
                                    groupChat(callback, overgameUndo("chicarrot"));
                                    return;
                                }
                                else if (s == "bully")
                                {
                                    groupChat(callback, overgameUndo("bully"));
                                    return;
                                }
                                 * */